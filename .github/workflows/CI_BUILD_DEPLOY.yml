name: CI_BUILD_DEPLOY

on:
  push:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        node-version: [14.5]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Use ache node_modules
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: ${{ matrix.node-version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Push to GitHub Container Registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ghcr.io/ryoctrl/mirin_panel:latest
          build-args: |
            NEXT_PUBLIC_apiKey=${{ secrets.FIREBASE_API_KEY }}
            NEXT_PUBLIC_authDomain=${{ secrets.FIREBASE_PROJECT_ID }}.firebaseapp.com
            NEXT_PUBLIC_databaseURL=https://${{ secrets.FIREBASE_PROJECT_ID }}.firebaseio.com
            NEXT_PUBLIC_projectId=${{ secrets.FIREBASE_PROJECT_ID }}
            NEXT_PUBLIC_storageBucket=${{ secrets.FIREBASE_PROJECT_ID }}.appspot.com
            NEXT_PUBLIC_messagingSenderId=${{ secrets.FIREBASE_SENDER_ID }}
            NEXT_PUBLIC_appId=${{ secrets.FIREBASE_APP_ID }}
            NEXT_PUBLIC_measurementId=${{ secrets.FIREBASE_MEASUREMENT_ID }}
            NEXT_PUBLIC_NODE_ENV=production
            NEXT_PUBLIC_FRONTEND_ADDRESS=${{ secrets.FRONTEND_ADDRESS }}

      - name: deploy
        env:
          CI_KEY: ${{ secrets.CI_PRIVATE_KEY }}
          CI_HOST: ${{ secrets.CI_HOST }}
          CI_USER: ${{ secrets.CI_USER }}
          CI_DIR: ${{ secrets.CI_DIR }}
        run: echo "${CI_KEY}" > id_rsa
          chmod 600 id_rsa
          ssh -oStrictHostKeyChecking=no ${CI_USER}@${CI_HOST} -i id_rsa "cd ~/${CI_DIR} && ./update.sh"
